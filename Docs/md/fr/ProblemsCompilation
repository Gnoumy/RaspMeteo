1 Assurez-vous que les compilateurs QT de Desktop (gcc 64) et de Raspberry sont identiques. 

J'ai rencontré un problème lorsque j'ai besoin de lier la bibliothèque openssh. Si vous rencontrez le même problème, voici la solution: 

Étape 1: Vérifiez vos compilateurs QT de Desktop (gcc 64) et de Raspberry, s'ils ne sont pas identiques, mettez à jour le plus bas. 

Étape 2: Installez libssl1.0-dev

2 Problem details : Complilater QT of Rasperry 5.11.1 has not added modules positioning and location.
Solution : 
step 1: In menuconfig, make sure you choise the following options

        Target packages-> Graphic libraries and applications (graphic/text)-> Qt5 (BR2_PACKAGE_QT5 [=y]),BR2_PACKAGE_QT5LOCATION [=y]
        Target package-> Networking applications-> sconeserver (BR2_PACKAGE_SCONESERVER [=y]) ,BR2_PACKAGE_SCONESERVER_LOCATION [=y]
        Filesystem image -> exact size (480M)

step 2: do "make" to rebuild Raspberry buildroot

3 Problem details : A crash because the application has no connexion, there is no JSON but someone analys the json structure with .at(0)
Solution: cut the network connection on desktop and run the program in debug mode

4 Problem destails: Datebase of Marco
Solution:
Step 1 : Decompress and Unarchivie "avionDatabase.db.gz". Put the correct datebase file "avionDatabase.db" just under the folder "Base"
Step 2: In QT creator, open Ressources->qmlmap.qrc->/->Base, delect "avionDatabase.db.gz" and add avionDatabase.db.
Step 3 : Delect "avionDatabase.db.gz" using "git rm"
Step 4 : Add "localStationCS/Base/*" to the end of file .gitignore

5 Problem destails: The program crashes on Raspberry because some modules use JSON array on empty JSON when no connexion is activated.
Solution:
Do same protection program before reading json files. For example:

    QByteArray bytes = pReplayalt->readAll();
    QJsonParseError jsonError;
    QJsonDocument doucument =QJsonDocument::fromJson(bytes,&jsonError);
    if(jsonError.error != QJsonParseError::NoError)
    {
        qDebug()<<QStringLiteral("Parsed Json failure");
        qDebug()<<jsonError.errorString();
        return;
    }





